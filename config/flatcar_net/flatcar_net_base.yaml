variant: flatcar
version: 1.1.0
ignition:
  config:
    merge:
      - local: out/flatcar_base.json
passwd:
  users:
    - name: coredns
      groups: [docker]
    - name: traefik
      groups: [docker]
    - name: haproxy
      groups: [docker]
systemd:
  units:
    - name: coredns.service
      enabled: true
      contents: |
        [Unit]
        Description=run CoreDNS
        Requires=docker.service
        After=docker.service

        [Service]
        Type=simple
        User=coredns
        Group=coredns
        ExecStartPre=-/usr/bin/docker stop coredns
        ExecStartPre=-/usr/bin/docker rm coredns
        ExecStartPre=/usr/bin/docker pull coredns/coredns:latest
        ExecStart=/usr/bin/docker run --rm --name coredns\
          -v /home/flatcar/.coredns/config:/etc/coredns\
          -p 53:53 -p 53:53/udp -p 9153:9153\
          coredns/coredns -conf /etc/coredns/Corefile

        [Install]
        WantedBy=multi-user.target
    - name: traefik.service
      enabled: false
      contents: |
        [Unit]
        Description=run Traefik
        Requires=docker.service
        After=docker.service

        [Service]
        Type=simple
        User=traefik
        Group=traefik
        ExecStartPre=-/usr/bin/docker stop traefik
        ExecStartPre=-/usr/bin/docker rm traefik
        ExecStartPre=/usr/bin/docker pull traefik:latest
        ExecStart=/usr/bin/docker run --rm --name traefik\
          --env-file /home/flatcar/.traefik/.env\
          -v /home/flatcar/.traefik/config:/etc/traefik\
          -v /home/flatcar/.traefik/logs:/logs\
          -v /home/flatcar/.traefik/acme:/acme\
          -v /var/run/docker.sock:/var/run/docker.sock\
          -p 80:80 -p 443:443/tcp -p 8082:8082/tcp -p 8443:8443/tcp\
          -l traefik.enable=true\
          traefik:latest

        [Install]
        WantedBy=multi-user.target
    - name: haproxy.service
      enabled: true
      contents: |
        [Unit]
        Description=run HAProxy
        Requires=docker.service
        After=docker.service

        [Service]
        Type=simple
        User=haproxy
        Group=haproxy
        ExecStartPre=-/usr/bin/docker stop haproxy
        ExecStartPre=-/usr/bin/docker rm haproxy
        ExecStartPre=/usr/bin/docker pull harbor.reyokatsu.net/network/haproxy:3.2-dev7-alpine
        ExecStart=/usr/bin/docker run --rm --name haproxy\
          -v /home/flatcar/.haproxy/config:/usr/local/etc/haproxy:ro\
          -p 222:222\
          harbor.reyokatsu.net/network/haproxy:3.2-dev7-alpine

        [Install]
        WantedBy=multi-user.target

storage:
  directories:
    - path: /home/flatcar/.traefik/logs
      user: { name: traefik }
      group: { name: traefik }
    - path: /home/flatcar/.traefik/acme
      user: { name: traefik }
      group: { name: traefik }
  files:
    - path: /etc/systemd/resolved.conf.d/10-DNS-override.conf
      overwrite: true
      contents:
        inline: |
          [Resolve]
          DNS=172.20.0.1
    # - path: /etc/sysconfig/iptables
    #   contents:
    #     inline: |
    - path: /etc/systemd/resolved.conf.d/stop_dns_stub_listener.conf
      contents:
        inline: |
          [Resolve]
          DNSStubListener=no
    - path: /home/flatcar/.traefik/config/traefik.yml
      user: { name: traefik }
      group: { name: traefik }
      contents:
        local: config/flatcar_net/traefik/traefik.yml
    - path: /home/flatcar/.traefik/config/external_service.yml
      user: { name: traefik }
      group: { name: traefik }
      contents:
        local: config/flatcar_net/traefik/external_service.yml
    - path: /home/flatcar/.traefik/.env
      user: { name: traefik }
      group: { name: traefik }
      mode: 0600
      contents: 
        inline: |
          CF_API_EMAIL=
          CF_DNS_API_TOKEN=
    - path: /home/flatcar/.haproxy/config/haproxy.cfg
      user: { name: haproxy }
      group: { name: haproxy }
      contents:
        local: config/flatcar_net/haproxy/haproxy.cfg