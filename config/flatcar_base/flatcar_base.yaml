variant: flatcar
version: 1.1.0
passwd:
  users:
    - name: flatcar
      ssh_authorized_keys_local:
        - config/flatcar_base/authorized_keys
      groups: [sudo, docker]
systemd:
  units:
    - name: docker.service
      enabled: true
    - name: restart-systemd-networkd.service
      enabled: true
      contents: |
        [Unit]
        Description=Restart systemd-networkd
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/systemctl restart systemd-networkd

        [Install]
        WantedBy=multi-user.target
    - name: docker-prune.service
      enabled: false
      contents: |
        [Unit]
        Description=Prune unused Docker images
        Requires=docker.service
        After=docker.service

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/docker image prune -a -f --filter "until=24h"

        [Install]
        WantedBy=multi-user.target
    - name: docker-prune.timer
      enabled: true
      contents: |
        [Unit]
        Description=Run docker-prune.service weekly

        [Timer]
        OnCalendar=Sun *-*-* 04:00:00
        # 負荷分散のため、実際の実行時間をずらすことを許可する
        AccuracySec=2h
        # 実行できなかった場合、次回起動時に実行する
        Persistent=true

        [Install]
        WantedBy=timers.target
    - name: set-timezone.service
      enabled: true
      contents: |
        [Unit]
        Description=timezone settings

        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/timedatectl set-timezone Asia/Tokyo

        [Install]
        WantedBy=multi-user.target
    - name: node-exporter.service
      enabled: true
      contents: |
        [Unit]
        Description=run node-exporter container
        Requires=docker.service
        After=docker.service

        [Service]
        Type=simple
        ExecStartPre=-/usr/bin/docker stop node_exporter
        ExecStartPre=-/usr/bin/docker rm node_exporter
        ExecStartPre=/usr/bin/docker pull prom/node-exporter
        ExecStart=/usr/bin/docker run --rm --name node_exp\
          -p 9100:9100\
          --pid=host\
          -v /:/host:ro,rslave\
          prom/node-exporter

        [Install]
        WantedBy=multi-user.target
    - name: alloy.service
      enabled: true
      contents: |
        [Unit]
        Description=run Grafana Alloy container
        Requires=docker.service
        After=docker.service

        [Service]
        Type=simple
        ExecStartPre=-/usr/bin/docker stop alloy
        ExecStartPre=-/usr/bin/docker rm alloy
        ExecStartPre=/usr/bin/docker pull grafana/alloy:latest
        ExecStart=/usr/bin/docker run --rm --name alloy -v /home/flatcar/.alloy/config.alloy:/etc/alloy/config.alloy -p 12345:12345 grafana/alloy:latest run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy

        [Install]
        WantedBy=multi-user.target

storage:
  links:
    - path: /etc/systemd/system/multi-user.target.wants/docker.service
      target: /usr/lib/systemd/system/docker.service
      hard: false
      overwrite: true
  files:
    - path: /etc/systemd/resolved.conf.d/0-DNS.conf
      contents:
        inline: |
          [Resolve]
          DNS=172.20.0.4 172.20.0.5
    - path: /etc/docker/daemon.json
      contents:
        local: config/flatcar_base/docker/daemon.json
    - path: /home/flatcar/.alloy/config.alloy
      contents:
        inline: |
          logging {
            level = "warn"
          }

          loki.relabel "journal" {
            forward_to = []

            rule {
              source_labels = ["__journal__systemd_unit"]
              target_label  = "unit"
            }
          }

          loki.source.journal "read"  {
            forward_to    = [loki.write.grafana_loki.receiver]
            relabel_rules = loki.relabel.journal.rules
            labels        = {component = "loki.source.journal"}
          }

          loki.write "grafana_loki" {
            endpoint {
              url = "http://172.20.5.15:3100/loki/api/v1/push"

              // basic_auth {
              //  username = "admin"
              //  password = "admin"
              // }
            }
          }
    - path: /etc/docker/certs.d/harbor.reyokatsu.net/ca.crt
      user: {name: flatcar}
      group: {name: flatcar}
      contents:
        local: config/flatcar_base/docker/ca.crt
